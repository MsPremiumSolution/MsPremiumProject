@model MSPremiumProject.ViewModels.ClienteCreateViewModel

<script>
    $(document).ready(function () {
        var paisDropdown = $('#paisDropdown');
        var regiaoDropdown = $('#regiaoDropdown');
        var regioesContainer = $('#regioesContainer');
        var cpPortugalContainer = $('#cpPortugalContainer');
        var cpEstrangeiroContainer = $('#cpEstrangeiroContainer');
        var clienteNomeLocalidadeTextoInput = $('#Cliente_NomeLocalidadeTexto');

        var savedSelectedRegiao = "@Model.SelectedRegiao";
        var savedNomeLocalidadeTexto = "@Model.Cliente.NomeLocalidadeTexto";

        function toggleFieldsByCountry() {
            var selectedPaisOption = paisDropdown.find('option:selected');
            var selectedPaisText = selectedPaisOption.text().toLowerCase();
            var selectedPaisId = paisDropdown.val();

            // Esconde todos os containers de CP por padrão
            cpPortugalContainer.hide();
            cpEstrangeiroContainer.hide();

            // Limpa campos de CP que serão ocultados
            $('#Cliente_Cp4').val('');
            $('#Cliente_Cp3').val('');
            $('#Cliente_CodigoPostalEstrangeiro').val('');

            if (selectedPaisId) {
                regioesContainer.show(); // SEMPRE mostra o container das regiões se um país for selecionado

                // Determina qual container de CP mostrar
                if (selectedPaisText === 'portugal') {
                    cpPortugalContainer.show();
                } else {
                    cpEstrangeiroContainer.show();
                }

                // Faz a chamada AJAX para obter regiões para o país selecionado (agora para QUALQUER país)
                $.ajax({
                    url: '@Url.Action("GetRegioesPorPais", "Client")',
                    type: 'GET',
                    dataType: 'json',
                    data: { paisId: selectedPaisId },
                    success: function (data) {
                        regiaoDropdown.empty().append($('<option></option>').val('').text('-- Selecione uma Região / Distrito --'));
                        if (data && data.length > 0) {
                            $.each(data, function (index, item) {
                                var option = $('<option></option>').val(item).text(item);
                                if (item === savedSelectedRegiao) {
                                    option.prop('selected', true);
                                }
                                regiaoDropdown.append(option);
                            });
                        }

                        // No carregamento/mudança de país:
                        // Se for Portugal e houver uma região salva, preenche o campo de texto da localidade com ela.
                        // Caso contrário (países estrangeiros ou Portugal sem região salva), preenche com o valor salvo do campo de texto.
                        if (selectedPaisText === 'portugal') {
                            clienteNomeLocalidadeTextoInput.val(savedSelectedRegiao);
                        } else {
                            clienteNomeLocalidadeTextoInput.val(savedNomeLocalidadeTexto);
                        }
                    },
                    error: function () {
                        console.error("Erro ao buscar regiões.");
                        regiaoDropdown.empty().append($('<option></option>').val('').text('-- N/A --'));
                        // Se a chamada AJAX falhar, o campo de texto deve reter o valor salvo
                        clienteNomeLocalidadeTextoInput.val(savedNomeLocalidadeTexto);
                    }
                });
            } else { // Nenhum país selecionado
                regioesContainer.hide();
                regiaoDropdown.empty().append($('<option></option>').val('').text('-- Selecione uma Região / Distrito --'));
                clienteNomeLocalidadeTextoInput.val(''); // Limpa o campo de texto da localidade
            }
        }

        // Listener para quando uma região é selecionada no dropdown
        regiaoDropdown.on('change', function () {
            var selectedRegiaoValue = regiaoDropdown.val();
            // Sempre que uma região é selecionada, o campo de texto da localidade é atualizado.
            // O valor do dropdown é o que será levado para o campo de texto da localidade
            clienteNomeLocalidadeTextoInput.val(selectedRegiaoValue);
        });

        // Listener para quando o país é mudado
        paisDropdown.on('change', function () {
            // Resetamos os valores salvos para que a lógica de preenchimento inicie do zero
            savedSelectedRegiao = "";
            savedNomeLocalidadeTexto = ""; // Resetar para que o campo de texto seja reavaliado pela nova seleção/país
            toggleFieldsByCountry();
        });

        // Executa a função no carregamento da página para definir o estado inicial (útil para modo Edit)
        toggleFieldsByCountry();
    });
</script>