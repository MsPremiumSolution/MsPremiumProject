@model IEnumerable<MSPremiumProject.Models.Proposta>

@{
    ViewData["Title"] = "Orçamentos por Concluir";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- O container-fluid já é usado pelo nosso layout, mas podemos adicionar um espaçamento específico -->
<div class="d-flex flex-column h-100">

    <!-- CABEÇALHO DA PÁGINA -->
    <div class="d-flex justify-content-between align-items-center mb-4 pb-3 border-bottom border-secondary-subtle">
        <h1 class="mb-0">@ViewData["Title"]</h1>
        <!-- O botão "Novo Orçamento" deve ser btn-primary para usar o dourado -->
        <a asp-controller="Budget" asp-action="Index" class="btn btn-primary btn-lg">
            <i class="bi bi-plus-circle-fill me-2"></i>Novo Orçamento
        </a>
    </div>

    <!-- ALERTAS DE FEEDBACK -->
    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success">@TempData["MensagemSucesso"]</div>
    }
    @if (TempData["MensagemAviso"] != null)
    {
        <div class="alert alert-warning">@TempData["MensagemAviso"]</div>
    }
    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger">@TempData["MensagemErro"]</div>
    }

    <!-- CONTEÚDO PRINCIPAL -->
    @if (!Model.Any())
    {
        <div class="card flex-grow-1 d-flex justify-content-center align-items-center">
            <div class="text-center p-5">
                <i class="bi bi-journal-x display-1 text-muted mb-3"></i>
                <h3 class="text-white-50">Não existem orçamentos por concluir.</h3>
                <p class="text-muted">Clique em "Novo Orçamento" para começar um.</p>
            </div>
        </div>
    }
    else
    {
        <!-- A classe .card já tem o estilo escuro que definimos -->
        <div class="card">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <!-- REMOVIDA a classe "table-light" do thead para usar os nossos estilos -->
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Proposta Nº</th>
                                <th>Cliente</th>
                                <th>Data de Criação</th>
                                <th>Estado</th>
                                <th class="text-end">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var proposta in Model)
                            {
                                <tr>
                                    <!-- Coluna Proposta Nº - Texto branco para destaque -->
                                    <td><strong class="text-white">#@proposta.PropostaId</strong></td>
                                    
                                    <!-- Coluna Cliente - Texto cinza claro, mas legível -->
                                    <td class="text-white-50">@(proposta.Cliente?.Nome) @(proposta.Cliente?.Apelido)</td>
                                    
                                    <!-- Coluna Data - Texto cinza claro, mas legível -->
                                    <td class="text-white-50">@proposta.DataProposta.ToString("dd/MM/yyyy HH:mm")</td>
                                    
                                    <td>
                                        <span class="badge text-bg-warning">
                                            <i class="bi bi-pencil"></i> @(proposta.Estado?.Nome)
                                        </span>
                                    </td>
                                    <td class="text-end">
                                        <a asp-controller="Budget" asp-action="ContinuarOrcamento" asp-route-id="@proposta.PropostaId" class="btn btn-primary">
                                            Continuar <i class="bi bi-arrow-right-circle"></i>
                                        </a>

                                        <button type="button" class="btn btn-outline-danger ms-2" data-bs-toggle="modal" data-bs-target="#deleteModal" data-proposta-id="@proposta.PropostaId" data-proposta-cliente="@(proposta.Cliente?.Nome) @(proposta.Cliente?.Apelido)" title="Apagar Orçamento">
                                            <i class="bi bi-trash-fill"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

<!-- ================== MODAL DE CONFIRMAÇÃO DE APAGAR ================== -->
<!-- O modal já herdará o estilo escuro do nosso CSS -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar Eliminação</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Tem a certeza que deseja apagar a proposta <strong id="propostaIdText" class="text-white"></strong> para o cliente <strong id="propostaClienteText" class="text-white"></strong>?</p>
                <p class="text-danger"><i class="bi bi-exclamation-triangle-fill me-2"></i>Esta ação não pode ser revertida.</p>
            </div>
            <div class="modal-footer">
                <form asp-action="DeleteProposta" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="propostaIdToDelete" />
                    <!-- Botão de cancelar pode ser .btn-secondary para usar a cor padrão -->
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <!-- Botão de apagar já é .btn-danger, o que é correto -->
                    <button type="submit" class="btn btn-danger">Sim, Apagar</button>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        // O seu JavaScript para o modal está perfeito e não precisa de alterações.
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const propostaId = button.getAttribute('data-proposta-id');
            const propostaCliente = button.getAttribute('data-proposta-cliente');

            const modalBodyPropostaId = deleteModal.querySelector('#propostaIdText');
            const modalBodyPropostaCliente = deleteModal.querySelector('#propostaClienteText');
            const inputIdToDelete = deleteModal.querySelector('#propostaIdToDelete');

            modalBodyPropostaId.textContent = '#' + propostaId;
            modalBodyPropostaCliente.textContent = propostaCliente;
            inputIdToDelete.value = propostaId;
        });
    </script>
}