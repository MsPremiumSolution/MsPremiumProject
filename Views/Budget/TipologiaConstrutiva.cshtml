@model IEnumerable<MSPremiumProject.Models.TipologiaConstrutiva>

@{
    ViewData["Title"] = "Tipologia Construtiva";
    var clienteNome = Context.Session.GetString("CurrentBudget_ClienteNome");
}

<style>
    .construction-type-card {
        border: 2px solid #e9ecef;
        border-radius: 0.5rem;
        overflow: hidden;
        transition: all 0.2s ease-in-out;
        cursor: pointer;
        display: block;
        text-decoration: none;
        color: inherit;
    }

        .construction-type-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15);
            border-color: #0d6efd;
        }

        .construction-type-card.selected {
            border-color: #198754;
            border-width: 3px;
            box-shadow: 0 0 0 4px rgba(25, 135, 84, 0.25);
        }

        .construction-type-card img {
            width: 100%;
            height: 180px;
            object-fit: cover;
        }

    .card-body {
        padding: 1rem;
        text-align: center;
    }
</style>

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mb-1">@ViewData["Title"]</h1>
            <p class="text-muted">Orçamento para: <strong>@clienteNome</strong></p>
        </div>
    </div>

    <form asp-action="SaveTipologiaAndContinue" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" id="selectedTipologiaId" name="selectedTipologiaId" value="@Model.FirstOrDefault()?.TipologiaConstrutivaId" />

        <div class="row g-4" id="tipologiaContainer">
            @foreach (var tipologia in Model)
            {
                <div class="col-xl-3 col-lg-4 col-md-6">
                    <div class="construction-type-card @(Model.First() == tipologia ? "selected" : "")" data-value="@tipologia.TipologiaConstrutivaId">

                        @{
                            // ================== A SOLUÇÃO FINAL: ISOLAMENTO TOTAL DA VARIÁVEL ==================
                            // A teoria é que a string vinda do modelo tem um estado interno estranho.
                            // Para corrigir isto, decompomos a string num array de caracteres e construímos
                            // uma instância de string completamente nova e limpa a partir dele.
                            // Isto quebra qualquer ligação com o objeto original vindo do Entity Framework.
                            var imageUrlFinal = "";
                            if (!string.IsNullOrEmpty(tipologia.ImagemUrl))
                            {
                                imageUrlFinal = new string(tipologia.ImagemUrl.ToCharArray());
                            }
                        }

                        @* A IMAGEM QUE, POR TODA A LÓGICA, TEM DE FUNCIONAR AGORA *@
                        @if (!string.IsNullOrEmpty(imageUrlFinal))
                        {
                            <img src="@Url.Content($"~/{imageUrlFinal}")" alt="@tipologia.Nome" asp-append-version="true" />
                        }
                        else
                        {
                            <img src="~/images/placeholder.jpg" alt="@tipologia.Nome" asp-append-version="true" />
                        }

                        <div class="card-body">
                            <h5 class="card-title">@tipologia.Nome</h5>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="mt-5 d-flex justify-content-between align-items-center">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Voltar
            </a>
            <button type="submit" class="btn btn-primary btn-lg">
                Salvar e continuar <i class="bi bi-arrow-right"></i>
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            const container = $('#tipologiaContainer');
            const hiddenInput = $('#selectedTipologiaId');

            container.on('click', '.construction-type-card', function() {
                container.find('.construction-type-card').removeClass('selected');
                $(this).addClass('selected');

                const selectedId = $(this).data('value');
                hiddenInput.val(selectedId);
            });
        });
    </script>
}