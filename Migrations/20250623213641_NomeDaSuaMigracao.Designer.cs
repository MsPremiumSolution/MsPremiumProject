// <auto-generated />
using System;
using MSPremiumProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSPremiumProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250623213641_NomeDaSuaMigracao")]
    partial class NomeDaSuaMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("MSPremiumProject.Models.Calculovolume", b =>
                {
                    b.Property<ulong>("CalculoVolumeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("AlturaMetros")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Comprimento")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Estadia1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("EstadiaDireta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Largura")
                        .HasColumnType("decimal(65,30)");

                    b.Property<ulong>("VolumeId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("CalculoVolumeId");

                    b.HasIndex("VolumeId");

                    b.ToTable("calculovolume", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Cliente", b =>
                {
                    b.Property<ulong>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Apelido")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cp3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Cp4")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<DateOnly?>("Dtnascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("LocalidadeId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroFiscal")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<long?>("Telefone1")
                        .HasColumnType("bigint");

                    b.Property<long?>("Telefone2")
                        .HasColumnType("bigint");

                    b.HasKey("ClienteId");

                    b.HasIndex("LocalidadeId");

                    b.HasIndex("NumeroFiscal")
                        .IsUnique()
                        .HasDatabaseName("IX_Cliente_NumeroFiscal_Unique");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Construtivo", b =>
                {
                    b.Property<ulong>("ConstrutivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Altitude")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("AnoConstrucao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FechamentoCobertura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FechamentoCoberturaPosterior")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FechamentoOrientacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FechamentoTipoFachada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("FechamentoTratHidrofugacao")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Nandares")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Nhabitantes")
                        .HasColumnType("decimal(65,30)");

                    b.Property<ulong>("PropostaId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("ConstrutivoId");

                    b.HasIndex("PropostaId");

                    b.ToTable("construtivo", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Dadosgeral", b =>
                {
                    b.Property<ulong>("DadosGeralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("DgCoberturaFposterior")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DgCoberturaFprincipal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DgIsolamentoAquecimento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DgIsolamentoCamera")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DgIsolamentoInterno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DgOrientacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DgTipoFachada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("DgTipoJanelaCaixasPersiana")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DgTipoJanelaDuplas")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("DgTipoJanelaId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("DgTipoJanelaMaterial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("DgTipoJanelaRpt")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("DgTipoJanelaUnidades")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("DgTipoJanelaVidro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("DgTratamentoHidrofugacao")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("PropostaId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("TipoObraId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("TipoTratamentoId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("DadosGeralId");

                    b.HasIndex("DgTipoJanelaId");

                    b.HasIndex("PropostaId");

                    b.HasIndex("TipoObraId");

                    b.HasIndex("TipoTratamentoId");

                    b.ToTable("dadosgeral", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Higrometrium", b =>
                {
                    b.Property<ulong>("HigrometriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("DadosGeralId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("DataLogger")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("HumidadeExterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("HumidadeInterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("NivelCo2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("NivelHcho")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("NivelTcov")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PontoOrvalho")
                        .HasColumnType("decimal(65,30)");

                    b.Property<ulong>("PropostaId")
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("TempExterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TempInterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TempParedesInt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TempPontosFrios")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("HigrometriaId");

                    b.HasIndex("DadosGeralId");

                    b.HasIndex("PropostaId");

                    b.ToTable("higrometria", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Localidade", b =>
                {
                    b.Property<ulong>("LocalidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("NomeLocalidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<ulong>("PaisId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("LocalidadeId");

                    b.HasIndex("PaisId");

                    b.ToTable("Localidades", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Pai", b =>
                {
                    b.Property<ulong>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("PaisID");

                    b.Property<string>("CodigoIso")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("NomePais")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NomePais");

                    b.HasKey("PaisId");

                    b.ToTable("pais", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<ulong>("UtilizadorId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("UtilizadorID");

                    b.HasKey("Id");

                    b.HasIndex("TokenValue")
                        .IsUnique();

                    b.HasIndex("UtilizadorId");

                    b.ToTable("PasswordResetToken", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Propostum", b =>
                {
                    b.Property<ulong>("PropostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ClienteId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("CodigoProposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataAceitacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataProposta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("UtilizadorId")
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("ValorObra")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PropostaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("proposta", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Qualidadear", b =>
                {
                    b.Property<ulong>("QualidadeArId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("DadosGeralId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ObjetivoId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("VolumeId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("QualidadeArId");

                    b.HasIndex("DadosGeralId");

                    b.HasIndex("VolumeId");

                    b.ToTable("qualidadear", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Role", b =>
                {
                    b.Property<ulong>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("RoleID");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Sintoma", b =>
                {
                    b.Property<ulong>("SintomaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Alergias")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Cheiros")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CondensacaoJanelas")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("DadosGeralId")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Esporos")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExcessoAquecimento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Fungos")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("GasRadon")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MofosRoupasArmario")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("PropostaId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("SintomaId");

                    b.HasIndex("DadosGeralId");

                    b.HasIndex("PropostaId");

                    b.ToTable("sintoma", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipojanela", b =>
                {
                    b.Property<ulong>("TipoJanelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoJanela1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoJanelaId");

                    b.ToTable("tipojanela", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipoobra", b =>
                {
                    b.Property<ulong>("TipoObraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoObraId");

                    b.ToTable("tipoobra", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipotratamento", b =>
                {
                    b.Property<ulong>("TipoTratamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("TipoTratamentoNome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoTratamentoId");

                    b.ToTable("tipotratamento", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Utilizador", b =>
                {
                    b.Property<ulong>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("UtilizadorID");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Dtnascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pwp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PWP");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("RoleID");

                    b.HasKey("UtilizadorId");

                    b.HasIndex("RoleId");

                    b.ToTable("utilizador", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Volume", b =>
                {
                    b.Property<ulong>("VolumeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("SuperficieTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VolumeTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("VolumeId");

                    b.ToTable("volume", (string)null);
                });

            modelBuilder.Entity("MSPremiumProject.Models.Calculovolume", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Volume", "Volume")
                        .WithMany("Calculovolumes")
                        .HasForeignKey("VolumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Cliente", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Localidade", "LocalidadeNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("LocalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalidadeNavigation");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Construtivo", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Propostum", "Proposta")
                        .WithMany("Construtivos")
                        .HasForeignKey("PropostaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Dadosgeral", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Tipojanela", "DgTipoJanela")
                        .WithMany("Dadosgerals")
                        .HasForeignKey("DgTipoJanelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Propostum", "Proposta")
                        .WithMany("Dadosgerals")
                        .HasForeignKey("PropostaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Tipoobra", "TipoObra")
                        .WithMany("Dadosgerals")
                        .HasForeignKey("TipoObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Tipotratamento", "TipoTratamento")
                        .WithMany("Dadosgerals")
                        .HasForeignKey("TipoTratamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DgTipoJanela");

                    b.Navigation("Proposta");

                    b.Navigation("TipoObra");

                    b.Navigation("TipoTratamento");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Higrometrium", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Dadosgeral", "DadosGeral")
                        .WithMany("Higrometria")
                        .HasForeignKey("DadosGeralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Propostum", "Proposta")
                        .WithMany("Higrometria")
                        .HasForeignKey("PropostaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadosGeral");

                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Localidade", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Pai", "Pais")
                        .WithMany("Localidades")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("MSPremiumProject.Models.PasswordResetToken", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Utilizador", "Utilizador")
                        .WithMany("PasswordResetTokens")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Propostum", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Cliente", "Cliente")
                        .WithMany("Proposta")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Utilizador", "Utilizador")
                        .WithMany("Proposta")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Qualidadear", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Dadosgeral", "DadosGeral")
                        .WithMany("Qualidadears")
                        .HasForeignKey("DadosGeralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Volume", "Volume")
                        .WithMany("Qualidadears")
                        .HasForeignKey("VolumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadosGeral");

                    b.Navigation("Volume");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Sintoma", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Dadosgeral", "DadosGeral")
                        .WithMany("Sintomas")
                        .HasForeignKey("DadosGeralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Propostum", "Proposta")
                        .WithMany("Sintomas")
                        .HasForeignKey("PropostaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadosGeral");

                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Utilizador", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Role", "Role")
                        .WithMany("Utilizadors")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Cliente", b =>
                {
                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Dadosgeral", b =>
                {
                    b.Navigation("Higrometria");

                    b.Navigation("Qualidadears");

                    b.Navigation("Sintomas");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Localidade", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Pai", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Propostum", b =>
                {
                    b.Navigation("Construtivos");

                    b.Navigation("Dadosgerals");

                    b.Navigation("Higrometria");

                    b.Navigation("Sintomas");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Role", b =>
                {
                    b.Navigation("Utilizadors");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipojanela", b =>
                {
                    b.Navigation("Dadosgerals");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipoobra", b =>
                {
                    b.Navigation("Dadosgerals");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipotratamento", b =>
                {
                    b.Navigation("Dadosgerals");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Utilizador", b =>
                {
                    b.Navigation("PasswordResetTokens");

                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Volume", b =>
                {
                    b.Navigation("Calculovolumes");

                    b.Navigation("Qualidadears");
                });
#pragma warning restore 612, 618
        }
    }
}
