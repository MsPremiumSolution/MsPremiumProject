// <auto-generated />
using System;
using MSPremiumProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSPremiumProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250703230346_MakeCodigoPropostaNullable")]
    partial class MakeCodigoPropostaNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("MSPremiumProject.Models.Cliente", b =>
                {
                    b.Property<ulong>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Apelido")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CodigoPostalEstrangeiro")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cp3")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Cp4")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<DateOnly?>("Dtnascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Empresa")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("LocalidadeId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeLocalidadeTexto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroFiscal")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<long?>("Telefone1")
                        .HasColumnType("bigint");

                    b.Property<long?>("Telefone2")
                        .HasColumnType("bigint");

                    b.HasKey("ClienteId");

                    b.HasIndex("LocalidadeId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MSPremiumProject.Models.DadosConstrutivos", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<int?>("Altitude")
                        .HasColumnType("int");

                    b.Property<int?>("AnoConstrucao")
                        .HasColumnType("int");

                    b.Property<decimal?>("AreaM2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CoberturaFachadaPosterior")
                        .HasColumnType("longtext");

                    b.Property<string>("CoberturaFachadaPrincipal")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataVisita")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IsolamentoCamara")
                        .HasColumnType("longtext");

                    b.Property<string>("IsolamentoInterno")
                        .HasColumnType("longtext");

                    b.Property<string>("Localidade")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumeroAndares")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroHabitantes")
                        .HasColumnType("int");

                    b.Property<string>("OrientacaoFachada")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoAquecimento")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoFachada")
                        .HasColumnType("longtext");

                    b.Property<bool>("TratamentoHidrofugacao")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("DadosConstrutivos");
                });

            modelBuilder.Entity("MSPremiumProject.Models.DadosGerais", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("DadosConstrutivosId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("HigrometriaId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("SintomalogiaId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("TipoObraId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("TipoTratamentoId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("DadosConstrutivosId")
                        .IsUnique();

                    b.HasIndex("HigrometriaId")
                        .IsUnique();

                    b.HasIndex("SintomalogiaId")
                        .IsUnique();

                    b.HasIndex("TipoObraId");

                    b.HasIndex("TipoTratamentoId");

                    b.ToTable("DadosGerais");
                });

            modelBuilder.Entity("MSPremiumProject.Models.EstadoProposta", b =>
                {
                    b.Property<int>("EstadoPropostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EstadoPropostaId");

                    b.ToTable("EstadoProposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Higrometria", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("DataLoggerSensores")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("HumidadeRelativaExterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("HumidadeRelativaInterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("NivelCO2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("NivelHCHO")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("NivelTCOV")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PontoDeOrvalho")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PontosFrios")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("pontos_frios");

                    b.Property<decimal?>("TemperaturaExterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TemperaturaInterior")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TemperaturaParedesInternas")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TemperaturaPontoOrvalho")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Higrometria");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Janela", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("DadosConstrutivosId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Material")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumeroUnidades")
                        .HasColumnType("int");

                    b.Property<bool?>("PossuiCaixaPersiana")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PossuiJanelasDuplas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PossuiRPT")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TipoJanela")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoVidro")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DadosConstrutivosId");

                    b.ToTable("Janelas");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Localidade", b =>
                {
                    b.Property<ulong>("LocalidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("PaisId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("LocalidadeId");

                    b.HasIndex("PaisId");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Objetivos", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("AplicacaoTintaTermica")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EvacuacaoHumidadeExcesso")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ImpermeabilizacaoFachadas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InjeccaoCamaraArPoliuretano")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InjeccaoParedesAccaoCapilar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsolamentoExternoSATE")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsolamentoInteriorPladur")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TrituracaoCorticaTriturada")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TubagemParedesInfiltracao")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Objetivos");
                });

            modelBuilder.Entity("MSPremiumProject.Models.OrcamentoAr", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("ConfiguracaoFabricacao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ImplementacaoTrabalho")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Manutencao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Personalizacao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorFabricacao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorProjeto")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("OrcamentoAr");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Pai", b =>
                {
                    b.Property<ulong>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("CodigoIso")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("NomePais")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PaisId");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("MSPremiumProject.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<ulong>("UtilizadorId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Proposta", b =>
                {
                    b.Property<ulong>("PropostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ClienteId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("CodigoProposta")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataAceitacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataProposta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EstadoPropostaId")
                        .HasColumnType("int");

                    b.Property<ulong?>("QualidadeDoArId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("TipologiaConstrutivaId")
                        .IsRequired()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("TratamentoEstruturalId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("UtilizadorId")
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("ValorObra")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PropostaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoPropostaId");

                    b.HasIndex("QualidadeDoArId")
                        .IsUnique();

                    b.HasIndex("TipologiaConstrutivaId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Proposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.QualidadeDoAr", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("DadosGeraisId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ObjetivosId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("OrcamentoArId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("DadosGeraisId")
                        .IsUnique();

                    b.HasIndex("ObjetivosId")
                        .IsUnique();

                    b.HasIndex("OrcamentoArId")
                        .IsUnique();

                    b.ToTable("QualidadeDoAr");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Role", b =>
                {
                    b.Property<ulong>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("RoleID");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Sintomatologia", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Alergias")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Cheiros")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CondensacaoNasJanelas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ConsumoExcessivoAquecimento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EsporosEmSuperficies")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Fungos")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("GasRadao")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MofoEmRoupasArmarios")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ProblemasRespiratorios")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Sintomatologia");
                });

            modelBuilder.Entity("MSPremiumProject.Models.TipologiaConstrutiva", b =>
                {
                    b.Property<ulong>("TipologiaConstrutivaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipologiaConstrutivaId");

                    b.ToTable("TipologiasConstrutivas");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipoobra", b =>
                {
                    b.Property<ulong>("TipoObraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoObraId");

                    b.ToTable("Tipoobras");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipotratamento", b =>
                {
                    b.Property<ulong>("TipoTratamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("TipoTratamentoNome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TipoTratamentoId");

                    b.ToTable("Tipotratamentos");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Utilizador", b =>
                {
                    b.Property<ulong>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("UtilizadorID");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Dtnascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pwp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PWP");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("RoleID");

                    b.HasKey("UtilizadorId");

                    b.HasIndex("RoleId");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Volume", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Comprimento")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Largura")
                        .HasColumnType("decimal(65,30)");

                    b.Property<ulong>("QualidadeDoArId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("QualidadeDoArId");

                    b.ToTable("Volumes");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Cliente", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Localidade", "LocalidadeNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("LocalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalidadeNavigation");
                });

            modelBuilder.Entity("MSPremiumProject.Models.DadosGerais", b =>
                {
                    b.HasOne("MSPremiumProject.Models.DadosConstrutivos", "DadosConstrutivo")
                        .WithOne("DadosGerais")
                        .HasForeignKey("MSPremiumProject.Models.DadosGerais", "DadosConstrutivosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Higrometria", "Higrometria")
                        .WithOne("DadosGerais")
                        .HasForeignKey("MSPremiumProject.Models.DadosGerais", "HigrometriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Sintomatologia", "Sintomatologia")
                        .WithOne("DadosGerais")
                        .HasForeignKey("MSPremiumProject.Models.DadosGerais", "SintomalogiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Tipoobra", null)
                        .WithMany("Dadosgerals")
                        .HasForeignKey("TipoObraId");

                    b.HasOne("MSPremiumProject.Models.Tipotratamento", null)
                        .WithMany("Dadosgerals")
                        .HasForeignKey("TipoTratamentoId");

                    b.Navigation("DadosConstrutivo");

                    b.Navigation("Higrometria");

                    b.Navigation("Sintomatologia");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Janela", b =>
                {
                    b.HasOne("MSPremiumProject.Models.DadosConstrutivos", "DadosConstrutivo")
                        .WithMany("Janelas")
                        .HasForeignKey("DadosConstrutivosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadosConstrutivo");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Localidade", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Pai", "Pais")
                        .WithMany("Localidades")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("MSPremiumProject.Models.PasswordResetToken", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Utilizador", "Utilizador")
                        .WithMany("PasswordResetTokens")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Proposta", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Cliente", "Cliente")
                        .WithMany("Proposta")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.EstadoProposta", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoPropostaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.QualidadeDoAr", "QualidadeDoAr")
                        .WithOne("Proposta")
                        .HasForeignKey("MSPremiumProject.Models.Proposta", "QualidadeDoArId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MSPremiumProject.Models.TipologiaConstrutiva", "TipologiaConstrutiva")
                        .WithMany("Propostas")
                        .HasForeignKey("TipologiaConstrutivaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Utilizador", "Utilizador")
                        .WithMany("Proposta")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Estado");

                    b.Navigation("QualidadeDoAr");

                    b.Navigation("TipologiaConstrutiva");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("MSPremiumProject.Models.QualidadeDoAr", b =>
                {
                    b.HasOne("MSPremiumProject.Models.DadosGerais", "DadosGerais")
                        .WithOne("QualidadeDoAr")
                        .HasForeignKey("MSPremiumProject.Models.QualidadeDoAr", "DadosGeraisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.Objetivos", "Objetivos")
                        .WithOne("QualidadeDoAr")
                        .HasForeignKey("MSPremiumProject.Models.QualidadeDoAr", "ObjetivosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSPremiumProject.Models.OrcamentoAr", "OrcamentoAr")
                        .WithOne("QualidadeDoAr")
                        .HasForeignKey("MSPremiumProject.Models.QualidadeDoAr", "OrcamentoArId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DadosGerais");

                    b.Navigation("Objetivos");

                    b.Navigation("OrcamentoAr");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Utilizador", b =>
                {
                    b.HasOne("MSPremiumProject.Models.Role", "Role")
                        .WithMany("Utilizadors")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Volume", b =>
                {
                    b.HasOne("MSPremiumProject.Models.QualidadeDoAr", "QualidadeDoAr")
                        .WithMany("Volumes")
                        .HasForeignKey("QualidadeDoArId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QualidadeDoAr");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Cliente", b =>
                {
                    b.Navigation("Proposta");
                });

            modelBuilder.Entity("MSPremiumProject.Models.DadosConstrutivos", b =>
                {
                    b.Navigation("DadosGerais");

                    b.Navigation("Janelas");
                });

            modelBuilder.Entity("MSPremiumProject.Models.DadosGerais", b =>
                {
                    b.Navigation("QualidadeDoAr");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Higrometria", b =>
                {
                    b.Navigation("DadosGerais");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Localidade", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Objetivos", b =>
                {
                    b.Navigation("QualidadeDoAr");
                });

            modelBuilder.Entity("MSPremiumProject.Models.OrcamentoAr", b =>
                {
                    b.Navigation("QualidadeDoAr");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Pai", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("MSPremiumProject.Models.QualidadeDoAr", b =>
                {
                    b.Navigation("Proposta");

                    b.Navigation("Volumes");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Role", b =>
                {
                    b.Navigation("Utilizadors");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Sintomatologia", b =>
                {
                    b.Navigation("DadosGerais");
                });

            modelBuilder.Entity("MSPremiumProject.Models.TipologiaConstrutiva", b =>
                {
                    b.Navigation("Propostas");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipoobra", b =>
                {
                    b.Navigation("Dadosgerals");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Tipotratamento", b =>
                {
                    b.Navigation("Dadosgerals");
                });

            modelBuilder.Entity("MSPremiumProject.Models.Utilizador", b =>
                {
                    b.Navigation("PasswordResetTokens");

                    b.Navigation("Proposta");
                });
#pragma warning restore 612, 618
        }
    }
}
